{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e0925581",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-20T04:28:29.295255Z",
     "iopub.status.busy": "2024-09-20T04:28:29.294066Z",
     "iopub.status.idle": "2024-09-20T04:28:44.789820Z",
     "shell.execute_reply": "2024-09-20T04:28:44.788511Z"
    },
    "papermill": {
     "duration": 15.502761,
     "end_time": "2024-09-20T04:28:44.792697",
     "exception": false,
     "start_time": "2024-09-20T04:28:29.289936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import keras\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import tensorflow as tf"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad676731",
   "metadata": {
    "papermill": {
     "duration": 0.002705,
     "end_time": "2024-09-20T04:28:44.798380",
     "exception": false,
     "start_time": "2024-09-20T04:28:44.795675",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 1. Importing Training Data\n",
    "#### Primary focus is to segment training data into individual files and see how that affects learning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e2c08241",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-20T04:28:44.805874Z",
     "iopub.status.busy": "2024-09-20T04:28:44.805133Z",
     "iopub.status.idle": "2024-09-20T04:28:44.812414Z",
     "shell.execute_reply": "2024-09-20T04:28:44.809907Z"
    },
    "papermill": {
     "duration": 0.016109,
     "end_time": "2024-09-20T04:28:44.817089",
     "exception": false,
     "start_time": "2024-09-20T04:28:44.800980",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#reading data into keras data loader or whatever they use"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6f4c269",
   "metadata": {
    "papermill": {
     "duration": 0.004186,
     "end_time": "2024-09-20T04:28:44.824851",
     "exception": false,
     "start_time": "2024-09-20T04:28:44.820665",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 2. Designing a Convolutional Neural Network with transfer learning\n",
    "#### The pretrained base will be Resnet50V2"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 19.820657,
   "end_time": "2024-09-20T04:28:46.261145",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-20T04:28:26.440488",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
